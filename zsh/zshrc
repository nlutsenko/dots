# zsh
## Setup
plugins=(
  git
  brew
)
export ZSH=$HOME/.dotfiles/zsh/src
source $ZSH/oh-my-zsh.sh
export LSCOLORS="exfxcxdxbxegedabagacad"
export LS_COLORS="di=34:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43"
export LESS="-R"
export PAGER='less -KFX'
## Alias
alias zshrc='mate -w $HOME/.zshrc && source $HOME/.zshrc'
alias appstore-reset-server="sudo defaults delete /Library/Preferences/com.apple.SoftwareUpdate CatalogURL"
alias cat=ccat

# HomeBrew
# Turn-off Analytic, sorry, hate being tracked
export HOMEBREW_NO_ANALYTICS=1


# Basic
unset HISTFILE

if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='rmate -w'
else
  export EDITOR='mate -w'
fi

function o() {
  z $1 && open .
}

# $PATH
export PATH=/usr/local/bin:$PATH

# Python via Homebrew
export PATH="/usr/local/opt/python/libexec/bin:$PATH"

# Ruby & RVM
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Alias
alias desktop='cd ~/Desktop/$1'
alias ls='ls -AlGhgvo'
alias ll='exa -lha'
alias pr='hub pull-request -o'
alias imgcat='~/.dotfiles/zsh/img_cat.sh'

# Powerline
function powerline_precmd() {
    PS1="$(~/.dotfiles/powerline/powerline-shell.py $? --shell zsh 2> /dev/null)"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ]; then
  install_powerline_precmd
fi

# git
source ~/.dotfiles/git/github-pr.sh
## Alias
alias master='git checkout master'
alias cleanup='git branch --merged master | grep -v "\* master" | xargs -n 1 git branch -d'

# Xcode
## Many thanks to @orta
openx(){
  if test -n "$(find . -maxdepth 1 -name '*.xcworkspace' -print -quit)"
  then
    echo "Opening workspace"
    open *.xcworkspace
    return
  else
    if test -n "$(find . -maxdepth 1 -name '*.xcodeproj' -print -quit)"
    then
      echo "Opening project"
      open *.xcodeproj
      return
    else
      echo "Nothing found"
    fi
  fi
}

# cd
## src
_cdsrc() { cd $HOME/src/$@ ;}
alias src=_cdsrc
_completesrc () {
  local srcdir=$HOME/src
  local cur=${COMP_WORDS[$COMP_CWORD]}
  local prev=${COMP_WORDS[COMP_CWORD-1]}

  COMPREPLY=( $( compgen -d $srcdir/$cur | sed "s|$HOME/src/||" ) )
}

# Local Only
if [ -f ~/.profile ]; then
  source ~/.profile
fi

# Private Only
if [ -f ~/.dotfiles-private/bash_profile ]; then
  source ~/.dotfiles-private/bash_profile
fi

export FBANDROID_DIR=/Users/nlutsenko/fbsource/fbandroid
alias quicklog_update=/Users/nlutsenko/fbsource/fbandroid/scripts/quicklog/quicklog_update.sh
alias qlu=quicklog_update

# added by setup_fb4a.sh
export ANDROID_SDK=/opt/android_sdk
export ANDROID_NDK_REPOSITORY=/opt/android_ndk
export ANDROID_HOME=${ANDROID_SDK}
export PATH=${PATH}:${ANDROID_SDK}/tools:${ANDROID_SDK}/tools/bin:${ANDROID_SDK}/platform-tools

#### FIG ENV VARIABLES ####
[ -s ~/.fig/fig.sh ] && source ~/.fig/fig.sh
#### END FIG ENV VARIABLES ####
